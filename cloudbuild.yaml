steps:
  # Build and push Docker image with caching (includes npm ci and build)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--cache-from'
      - 'gcr.io/$PROJECT_ID/geargrab:latest'
      - '-t'
      - 'gcr.io/$PROJECT_ID/geargrab:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/geargrab:latest'
      - '.'
    timeout: '600s'

  # Push the container images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/geargrab']
    timeout: '300s'

  # Deploy to Cloud Run (fast deployment)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'geargrab'
      - '--image'
      - 'gcr.io/$PROJECT_ID/geargrab:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--port'
      - '8080'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'NODE_ENV=production,VITE_APP_URL=https://geargrab.co,VITE_USE_EMULATORS=false'
    timeout: '300s'

  # Quick health check
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸŽ‰ Deployment completed!"
        SERVICE_URL=$(gcloud run services describe geargrab --region=us-central1 --format='value(status.url)')
        echo "Service URL: $SERVICE_URL"

images:
  - 'gcr.io/$PROJECT_ID/geargrab:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/geargrab:latest'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'

timeout: '900s'
