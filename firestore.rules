rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Utility functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isInvolvedInBooking(bookingData) {
      return isAuthenticated() && (request.auth.uid == bookingData.renterUid || request.auth.uid == bookingData.ownerUid);
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/adminUsers/$(request.auth.uid)).data.isAdmin == true;
    }

    // User profiles - public read, user-only write
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isAdmin();

      // User's private data
      match /private/{document=**} {
        allow read: if isOwner(userId) || isAdmin();
        allow write: if isOwner(userId) || isAdmin();
      }
    }

    // Gear listings - public read, owner-only write
    match /listings/{listingId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.ownerUid == request.auth.uid;
      allow update: if isOwner(resource.data.ownerUid) || isAdmin();
      allow delete: if isOwner(resource.data.ownerUid) || isAdmin();
    }

    // Bookings - involved parties can read, specific rules for create/update
    match /bookings/{bookingId} {
      allow read: if isInvolvedInBooking(resource.data) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.renterUid == request.auth.uid;
      allow update: if isInvolvedInBooking(resource.data) || isAdmin();
      allow delete: if isAdmin();
    }

    // Reviews - public read, involved parties can write
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated() && (
        request.resource.data.reviewerUid == request.auth.uid
      );
      allow update: if isOwner(resource.data.reviewerUid) || isAdmin();
      allow delete: if isOwner(resource.data.reviewerUid) || isAdmin();
    }

    // Messages - only involved parties can read/write
    match /messages/{messageId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.senderUid ||
        request.auth.uid == resource.data.recipientUid
      );
      allow create: if isAuthenticated() && request.resource.data.senderUid == request.auth.uid;
      allow update: if false; // Messages should not be updated
      allow delete: if isAdmin();
    }

    // Admin-only collections
    match /adminUsers/{userId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    match /system/{document=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}