name: Deploy GearGrab to Cloud Run

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: geargrab-svelte
  REGION: us-central1
  REGISTRY: gcr.io

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run check

    - name: Run linter
      run: npm run lint

    - name: Build application
      run: npm run build

    - name: Test build output
      run: |
        if [ ! -d "build" ]; then
          echo "Build directory not found!"
          exit 1
        fi
        echo "Build successful - output directory exists"

  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t $REGISTRY/$PROJECT_ID/$SERVICE_NAME-staging:$GITHUB_SHA .
        docker push $REGISTRY/$PROJECT_ID/$SERVICE_NAME-staging:$GITHUB_SHA

    - name: Deploy to Cloud Run (Staging)
      run: |
        gcloud run deploy $SERVICE_NAME-staging \
          --image $REGISTRY/$PROJECT_ID/$SERVICE_NAME-staging:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 3000 \
          --memory 1Gi \
          --cpu 2 \
          --max-instances 50 \
          --min-instances 0 \
          --concurrency 1000 \
          --timeout 300 \
          --execution-environment gen2 \
          --cpu-throttling=false \
          --set-env-vars NODE_ENV=production,BASE44_ENV=staging

  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t $REGISTRY/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
        docker build -t $REGISTRY/$PROJECT_ID/$SERVICE_NAME:latest .
        docker push $REGISTRY/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push $REGISTRY/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run (Production)
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $REGISTRY/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 3000 \
          --memory 1Gi \
          --cpu 2 \
          --max-instances 100 \
          --min-instances 1 \
          --concurrency 1000 \
          --timeout 300 \
          --execution-environment gen2 \
          --cpu-throttling=false \
          --set-env-vars NODE_ENV=production,BASE44_ENV=prod,BASE44_SERVER_URL=https://base44.app

    - name: Get service URL
      id: get-url
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
        echo "ðŸš€ Deployed to: $SERVICE_URL"

    - name: Run smoke tests
      run: |
        curl -f ${{ steps.get-url.outputs.SERVICE_URL }} || exit 1
        echo "âœ… Smoke test passed"
