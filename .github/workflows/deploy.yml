name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - latest-version
  # Only deploy on manual trigger to save costs during development
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  # Add a check job to prevent unnecessary deployments
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changes.outputs.should-deploy }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for significant changes
        id: changes
        run: |
          # Only deploy if there are changes to source code, not just docs/scripts
          if git diff --name-only HEAD~1 HEAD | grep -E '\.(ts|js|svelte|json|dockerfile)$|^src/|^static/' > /dev/null; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          else
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            echo "No significant changes detected, skipping deployment"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.should-deploy == 'true' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          # Add required build-time environment variables
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_STRIPE_PUBLISHABLE_KEY: ${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and push container
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/geargrab-app:${{ github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/geargrab-app:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy geargrab-app \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/geargrab-app:${{ github.sha }} \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --memory 256Mi \
            --cpu 0.5 \
            --min-instances 0 \
            --max-instances 3 \
            --concurrency 80 \
            --timeout 300 \
            --set-env-vars NODE_ENV=production \
            --set-env-vars VITE_APP_URL=https://geargrab.co \
            --set-env-vars VITE_USE_EMULATORS=false \
            --set-env-vars FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --set-env-vars FIREBASE_ADMIN_CLIENT_EMAIL="${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}" \
            --set-env-vars FIREBASE_ADMIN_PRIVATE_KEY="${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}" \
            --set-env-vars STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}