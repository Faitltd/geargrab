steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/geargrab:$SHORT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/geargrab:latest',
      '.'
    ]

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/geargrab:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/geargrab:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'geargrab',
      '--image', 'gcr.io/$PROJECT_ID/geargrab:$SHORT_SHA',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '1Gi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '10',
      '--concurrency', '80',
      '--timeout', '300',
      '--set-env-vars', 'NODE_ENV=production,PORT=8080,HOST=0.0.0.0,PUBLIC_APP_URL=https://geargrab.co,PUBLIC_FIREBASE_PROJECT_ID=geargrabco'
    ]

# Build timeout
timeout: '1200s'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/geargrab:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/geargrab:latest'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'
